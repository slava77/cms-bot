#!/bin/sh -ex
CMS_BOT_DIR=$(dirname $0)
case $CMS_BOT_DIR in /*) ;; *) CMS_BOT_DIR=$(pwd)/${CMS_BOT_DIR} ;; esac
if [ "X$COMPARISON_ARCH" = "X" ] ; then COMPARISON_ARCH=$ARCHITECTURE; fi
source $CMS_BOT_DIR/jenkins-artifacts
cd $WORKSPACE
rm -f $WORKSPACE/ALL_DONE

if [ "X$COMPARISON_RELEASE" = "X" ] ; then COMPARISON_RELEASE=$RELEASE_FORMAT; fi

BASELINE_DIR=ib-baseline-tests/$COMPARISON_RELEASE/$COMPARISON_ARCH/$REAL_ARCH/matrix-results
PR_BASELINE_JOBDIR=pull-request-integration/PR-$PULL_REQUEST_NUMBER/$PULL_REQUEST_JOB_ID
PR_BASELINE_DIR=${PR_BASELINE_JOBDIR}/runTheMatrix-results

WFS_WITH_ERRORS=''

MAPPING_FILE=wf_mapping.txt
get_jenkins_artifacts ${BASELINE_DIR}/$MAPPING_FILE $WORKSPACE/$MAPPING_FILE

ERRORS_FILE=wf_errors.txt
get_jenkins_artifacts ${BASELINE_DIR}/$ERRORS_FILE $WORKSPACE/$ERRORS_FILE

# This file is generated by this script
DAS_NON_CONSISTENT_WFS_FILE=wf_non_consistent_das.txt

for wf in ${WORKFLOWS_LIST//,/ }
do
  WF_PATH=`grep -F $wf $WORKSPACE/$MAPPING_FILE` || true

  if [ "X$WF_PATH" = X ]; then
    ERR_DETAILS=`grep $wf $WORKSPACE/$ERRORS_FILE` || true
    if [ "X$ERR_DETAILS" = X ]; then
      WFS_WITH_ERRORS=$ERR_DETAILS,$wf';1'
    else
      WFS_WITH_ERRORS=$ERR_DETAILS,$WFS_WITH_ERRORS
    fi
  else
    echo "Going to compare: $wf"
    echo $WF_PATH
    echo ""
    WORKFLOWS_TO_COMPARE=$WORKFLOWS_TO_COMPARE,$WF_PATH
  fi
done

#remove first ,
WORKFLOWS_TO_COMPARE=`echo $WORKFLOWS_TO_COMPARE | sed 's/^.//'`

DETAILS_FILE=$WORKSPACE/'comparisonDetails.txt'
echo 'BASE_IB;'$RELEASE_FORMAT >> $DETAILS_FILE
echo 'PR_NUMBER;'$PULL_REQUEST_NUMBER >> $DETAILS_FILE
echo 'ADDITIONAL_PRS;'$ADDITIONAL_PULL_REQUESTS >> $DETAILS_FILE
echo 'ARCHITECTURE;'$ARCHITECTURE >> $DETAILS_FILE
echo 'REAL_ARCH;'$REAL_ARCH >> $DETAILS_FILE
echo 'COMPARISON_ARCH;'$COMPARISON_ARCH >> $DETAILS_FILE
echo 'MACHINE ARCHITECTURE:' >> $DETAILS_FILE
cat /proc/cpuinfo |  grep "model name" >> $DETAILS_FILE

ls /cvmfs/cms-ib.cern.ch || true
export SCRAM_ARCH=$ARCHITECTURE
scram project $RELEASE_FORMAT
set +x
cd $RELEASE_FORMAT
eval `scram run -sh`
if [ -e $CMSSW_RELEASE_BASE/src/Utilities/RelMon ] ; then
  mkdir -p src/Utilities/RelMon
  cp -r $CMSSW_RELEASE_BASE/src/Utilities/RelMon/* src/Utilities/RelMon/
  sed -i -e 's|\.\./RelMonSummary.html|RelMonSummary.html|' src/Utilities/RelMon/python/directories2html.py
  scram build clean
fi
set -x
JR_COMP_DIR=$WORKSPACE/results/JR-comparison
mkdir -p $JR_COMP_DIR
mkdir -p $WORKSPACE/results/files
cd $WORKSPACE/results
echo $WORKFLOWS_TO_COMPARE

for WF in ${WORKFLOWS_TO_COMPARE//,/ }; do

  echo '#######################################'
  echo "downloading: $WF"

  WF_DIR=`echo $WF | cut -d "/" -f1`
  WF_NUMBER=`echo $WF | cut -d'_' -f1`
  WF_FILE=$(basename $WF)

  get_jenkins_artifacts ${BASELINE_DIR}/${WF_DIR}/    ${JR_COMP_DIR}/$RELEASE_FORMAT/${WF_DIR}/ || true
  get_jenkins_artifacts ${PR_BASELINE_DIR}/${WF_DIR}/ ${JR_COMP_DIR}/PR-${PULL_REQUEST_NUMBER}/${WF_DIR}/ || true

  for dir in "${JR_COMP_DIR}/$RELEASE_FORMAT/${WF_DIR}" "${JR_COMP_DIR}/PR-${PULL_REQUEST_NUMBER}/${WF_DIR}" ; do
    [ -d $dir ] || continue
    for das_log in $(find ${dir} -name 'step1_dasquery.log') ; do
      grep '/store/' $das_log > ${das_log}.new || true
      mv ${das_log}.new $das_log
    done
  done

  mkdir -p $WORKSPACE/results/files/$WF_DIR
  ln ${JR_COMP_DIR}/$RELEASE_FORMAT/${WF} $WORKSPACE/results/files/$WF_DIR/$RELEASE_FORMAT-$WF_FILE

  if [ -f ${JR_COMP_DIR}/$RELEASE_FORMAT/$WF_DIR/step1_dasquery.log ] ; then
    ln ${JR_COMP_DIR}/$RELEASE_FORMAT/$WF_DIR/step1_dasquery.log $WORKSPACE/results/files/$WF_DIR/$RELEASE_FORMAT-step1_dasquery.log
  fi
  if [ -f ${JR_COMP_DIR}/PR-${PULL_REQUEST_NUMBER}/$WF ] ; then
    ln ${JR_COMP_DIR}/PR-${PULL_REQUEST_NUMBER}/$WF $WORKSPACE/results/files/$WF_DIR/$PULL_REQUEST_NUMBER-$WF_FILE
  fi
  if [ -f ${JR_COMP_DIR}/PR-${PULL_REQUEST_NUMBER}/$WF_DIR/step1_dasquery.log ] ; then
    ln ${JR_COMP_DIR}/PR-${PULL_REQUEST_NUMBER}/$WF_DIR/step1_dasquery.log $WORKSPACE/results/files/$WF_DIR/$PULL_REQUEST_NUMBER-step1_dasquery.log
  fi

  # check that the step1_dasquery.log files are correct.
  NUM_FILES=$(( `ls $WORKSPACE/results/files/$WF_DIR/*-step1_dasquery.log | wc -l` ))
  # if there is only one of them something is wrong, but if there is none is ok
  if [ "$NUM_FILES" -eq "1" ]; then
    WFS_WITH_DAS_INCONSISTENCY=$WF_NUMBER,$WFS_WITH_DAS_INCONSISTENCY
  elif [ "$NUM_FILES" -eq "2" ]; then
    PR_DAS_QUERY_LOG="$WORKSPACE/results/files/$WF_DIR/$PULL_REQUEST_NUMBER-step1_dasquery.log"
    BASELINE_DAS_QUERY_LOG="$WORKSPACE/results/files/$WF_DIR/$RELEASE_FORMAT-step1_dasquery.log"
    THEY_DIFFER=`diff -q "$PR_DAS_QUERY_LOG" "$BASELINE_DAS_QUERY_LOG" || true`
    if [ "X$THEY_DIFFER" != X ]; then
      WFS_WITH_DAS_INCONSISTENCY=$WF_NUMBER,$WFS_WITH_DAS_INCONSISTENCY
    fi
  fi 
done

echo $WFS_WITH_DAS_INCONSISTENCY >> $WORKSPACE/$DAS_NON_CONSISTENT_WFS_FILE

echo 'Finished downloading files:'

get_jenkins_artifacts ${PR_BASELINE_JOBDIR}/testsResults.txt $WORKSPACE/results/testsResults.txt
sed -i "s/COMPARISON;QUEUED/COMPARISON;RUNNING/g" $WORKSPACE/results/testsResults.txt
send_jenkins_artifacts $WORKSPACE/results/testsResults.txt ${PR_BASELINE_JOBDIR}/testsResults.txt

# --------------------------------------------------------------------------
# JR-Comparison
# --------------------------------------------------------------------------

#This is used manily for testing. In jenkins the 3 forms of comparisons are always run. But if you are testing you can control
#which comparison is run.
if [ "X$RUN_JR_COMP" = Xtrue ]; then

  cd $JR_COMP_DIR
  cp $CMS_BOT_DIR/comparisons/validateJR.sh  $JR_COMP_DIR
  chmod +x $JR_COMP_DIR/validateJR.sh
  cp $CMS_BOT_DIR/comparisons/validate.C     $JR_COMP_DIR
  cp $CMS_BOT_DIR/comparisons/matrix_RE.txt $JR_COMP_DIR
  export VALIDATE_C_SCRIPT=${JR_COMP_DIR}/validate.C

  echo  "$JR_COMP_DIR/validateJR.sh $JR_COMP_DIR/PR-$PULL_REQUEST_NUMBER $JR_COMP_DIR/$RELEASE_FORMAT OldVSNew matrix_RE.txt >> $JR_COMP_DIR/validateJR.log 2>&1" > $JR_COMP_DIR/command
  ($JR_COMP_DIR/validateJR.sh $JR_COMP_DIR/PR-$PULL_REQUEST_NUMBER $JR_COMP_DIR/$RELEASE_FORMAT OldVSNew matrix_RE.txt >> $JR_COMP_DIR/validateJR.log 2>&1) || true

  echo 'Finished with JR comparison:'
fi

# --------------------------------------------------------------------------
# Default Comparison
# --------------------------------------------------------------------------
if [ "X$RUN_DEFAULT_COMP" = Xtrue ]; then

  RELMON_COMP_DIR=$WORKSPACE/results/default-comparison
  mkdir $RELMON_COMP_DIR

  if [ "X$RUN_JR_COMP" = Xtrue ]; then
    RELMON_COMP_PARAMS_FILE=$RELMON_COMP_DIR/RelMonComparisonParams.txt
    $CMS_BOT_DIR/comparisons/analyzeFWComparison.py $JR_COMP_DIR $RELMON_COMP_PARAMS_FILE -R >> $RELMON_COMP_DIR/RelMonAssignedParameters.log 2>&1
  fi

  for WF in ${WORKFLOWS_TO_COMPARE//,/ }; do 

    WF_FILE=$(basename $WF)
    WF_DIR=`echo $WF | cut -d "/" -f1`
    WF_NUMBER=`echo $WF | cut -d'_' -f1`

    #create the output dir
    OUTPUT_DIR=$WORKSPACE/results/default-comparison/$WF_DIR
    mkdir -p $OUTPUT_DIR

    # If there is a file assigning custom thresholds from the results of the FWlite (JR) comparison, use it
    if [ "X$RUN_JR_COMP" = Xtrue ]; then
      eval $( cat $RELMON_COMP_PARAMS_FILE | grep "FOR_WF=$WF_NUMBER;" )
      echo $TH
      TH_PARAM="-t $TH "
    fi

    #requires checking out Utilities/RelMon from the release. It has already been done at the begining of this script. 

    # create a mini script for running this comparisons in parallel
    echo '#!/bin/sh -ex' >> $WORKSPACE/results/default-comparison/command-$WF_NUMBER
    echo "compare_using_files.py $WORKSPACE/results/files/$WF_DIR/$RELEASE_FORMAT-$WF_FILE $WORKSPACE/results/files/$WF_DIR/$PULL_REQUEST_NUMBER-$WF_FILE -o $OUTPUT_DIR --metas \" $RELEASE_FORMAT @@@ $RELEASE_FORMAT + $PULL_REQUEST_NUMBER \" --use_black_file -C -R -p --no_successes -s b2b $TH_PARAM--standalone >> ${OUTPUT_DIR}RelMonComp-$WF_NUMBER.log 2>&1" >> $WORKSPACE/results/default-comparison/command-$WF_NUMBER
    echo "cp $OUTPUT_DIR/RelMonSummary.html $OUTPUT_DIR/index.html" >> $WORKSPACE/results/default-comparison/command-$WF_NUMBER
    chmod 755 $WORKSPACE/results/default-comparison/command-$WF_NUMBER
    ($WORKSPACE/results/default-comparison/command-$WF_NUMBER || touch $WORKSPACE/results/default-comparison/error-$WF_NUMBER) &
  done

  jobs
  wait || true
  echo 'Finished with default comparison'
fi

if [ "X$RUN_JR_COMP" = Xtrue ]; then
  if [ "X$RUN_DEFAULT_COMP" = Xtrue ]; then
    echo 'Doing histogram, log and root comparison:'
    (python $CMS_BOT_DIR/logRootQA.py ${JR_COMP_DIR}/${RELEASE_FORMAT} ${JR_COMP_DIR}/PR-${PULL_REQUEST_NUMBER} ${JR_COMP_DIR} $WORKSPACE/results/default-comparison  >> $JR_COMP_DIR/logRootQA.log 2>&1) || true
    (grep SUMMARY $JR_COMP_DIR/logRootQA.log | cut -d' ' -f2-100 >> $JR_COMP_DIR/qaResultsSummary.log 2>&1) || true
  fi
fi

# ----------------------------------------------------------------------------
# Alternative Comparison
# ----------------------------------------------------------------------------

if [ "X$RUN_ALT_COMP" = Xtrue ]; then

  ALT_COMP_DIR=$WORKSPACE/results/alternative-comparison
  mkdir -p $ALT_COMP_DIR
  DQM_COMP_PARAMS_FILE=$ALT_COMP_DIR/comparisonParams.txt

  $CMS_BOT_DIR/comparisons/analyzeFWComparison.py $JR_COMP_DIR $DQM_COMP_PARAMS_FILE >> $ALT_COMP_DIR/assignedParameters.log 2>&1
  chmod +x $CMS_BOT_DIR/comparisons/makeDiff.sh
  for WF in ${WORKFLOWS_TO_COMPARE//,/ }; do 

    WF_FILE=$(basename $WF)
    WF_DIR=`echo $WF | cut -d "/" -f1`
    WF_NUMBER=`echo $WF | cut -d'_' -f1`
    BASE_FILE=$WORKSPACE/results/files/$WF_DIR/$RELEASE_FORMAT-$WF_FILE
    COMP_FILE=$WORKSPACE/results/files/$WF_DIR/$PULL_REQUEST_NUMBER-$WF_FILE
  
    mkdir -p $ALT_COMP_DIR/$WF_NUMBER
    cp $CMS_BOT_DIR/comparisons/compareValHists.C $ALT_COMP_DIR/$WF_NUMBER
    cp $CMS_BOT_DIR/comparisons/makeDiff.sh $ALT_COMP_DIR/$WF_NUMBER

    eval $( cat $DQM_COMP_PARAMS_FILE | grep "FOR_WF=$WF_NUMBER;" )
    echo $MOD

    # create a mini script for running this comparisons in parallel
    echo '#!/bin/sh -ex' >> $ALT_COMP_DIR/command-$WF_NUMBER
    echo "cd $ALT_COMP_DIR/$WF_NUMBER" >> $ALT_COMP_DIR/command-$WF_NUMBER
    #mod 28X will skip plots matching the pattern. In this case SiStrip/MechanicalView is hopelessly failing. 
    #Skip it until there is a fix in CMSSW
    echo "$ALT_COMP_DIR/$WF_NUMBER/makeDiff.sh $BASE_FILE $COMP_FILE $WF_NUMBER-result.ps 0 28$MOD "" "[0-9][0-9]/AlCaReco/Run summary/SiStrip/MechanicalView" || true" >> $ALT_COMP_DIR/command-$WF_NUMBER
    echo "mv diff.ps $ALT_COMP_DIR/$WF_NUMBER-result.ps || true" >> $ALT_COMP_DIR/command-$WF_NUMBER
    echo "mv diff.pdf $ALT_COMP_DIR/$WF_NUMBER-result.pdf || true" >> $ALT_COMP_DIR/command-$WF_NUMBER
    echo "gzip -f $ALT_COMP_DIR/$WF_NUMBER-result.ps || true" >> $ALT_COMP_DIR/command-$WF_NUMBER
    echo "gzip -f $ALT_COMP_DIR/$WF_NUMBER-result.pdf || true" >> $ALT_COMP_DIR/command-$WF_NUMBER

    chmod 755 $ALT_COMP_DIR/command-$WF_NUMBER
    ($ALT_COMP_DIR/command-$WF_NUMBER > $ALT_COMP_DIR/runDQMComp-$WF_NUMBER.log 2>&1 || touch $ALT_COMP_DIR/error-$WF_NUMBER) &

  done

  jobs
  wait || true
  echo 'Finished with alternative comparison:'
fi

cd $WORKSPACE
mkdir -p upload/alternative-comparisons

#default-comparison
for f in results/default-comparison/* ; do
  [ -e $f ] && mv $f upload/
done

#alternative-comparison
alt_dir=results/alternative-comparison
for f in ${alt_dir}/command* ${alt_dir}/*.ps ${alt_dir}/*.gz ${alt_dir}/*.log ${alt_dir}/comparisonParams.txt ; do
  [ -e $f ] && mv $f upload/alternative-comparisons/
done

#JR-comparison
for f in $(ls -d results/JR-comparison/command* results/JR-comparison/logRootQA.log results/JR-comparison/qaResultsSummary*.log results/JR-comparison/*/*.log results/JR-comparison/*/*.png | sed 's|results/JR-comparison/||') ; do
  d=$(dirname upload/validateJR/$f)
  if [ -e results/JR-comparison/$f ] ; then
    [ -d $d ] || mkdir -p $d
    mv results/JR-comparison/$f $d/
  fi
done

#files
if [ -e results/files ] ; then
  mkdir -p upload/files
  for file in $(find results/files -mindepth 2 -maxdepth 2 -name '*' | sed 's|^results/files/||') ; do
    fname=$(basename $file)
    wfdir=$(dirname $file)
    mkdir -p upload/files/${wfdir}
    case $file in 
      */${RELEASE_FORMAT}-*) SRC_FILE=../../../../../${BASELINE_DIR}/${wfdir}/$(echo $fname | sed "s|${RELEASE_FORMAT}-||") ;;
      *)                     SRC_FILE=../../../../../${PR_BASELINE_DIR}/${wfdir}/$(echo $fname | sed "s|$PULL_REQUEST_NUMBER-||") ;;
    esac
    ln -sf $SRC_FILE upload/files/$file
  done
fi
[ -e comparisonDetails.txt ] && mv comparisonDetails.txt upload/
send_jenkins_artifacts $WORKSPACE/upload/ baseLineComparisons/${RELEASE_FORMAT}+${PULL_REQUEST_NUMBER}/${BUILD_NUMBER}/
if [ -e $WORKSPACE/results/testsResults.txt ] ; then
  sed -i "s/COMPARISON;.*/COMPARISON;$BUILD_NUMBER/g" $WORKSPACE/results/testsResults.txt
  send_jenkins_artifacts $WORKSPACE/results/testsResults.txt ${PR_BASELINE_JOBDIR}/testsResults.txt
fi
touch $WORKSPACE/ALL_DONE

